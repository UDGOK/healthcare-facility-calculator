'use client';

import { useState, useEffect, Suspense } from 'react';
import { useSearchParams } from 'next/navigation';
import Link from 'next/link';
import { Building, Download, ArrowLeft, Calendar, MapPin, DollarSign, Users, FileText } from 'lucide-react';
import jsPDF from 'jspdf';

interface EstimateData {
  id: string;
  projectName: string;
  facilityType: string;
  clientName: string;
  location: string;
  projectData: any;
  rooms: any[];
  equipment: any[];
  costs: {
    equipment: number;
    installation: number;
    medicalGas: number;
    compliance: number;
    contingency: number;
    total: number;
  };
  totalCost: number;
  createdAt: string;
  status: string;
}

function EstimateViewerContent() {
  const searchParams = useSearchParams();
  const [estimate, setEstimate] = useState<EstimateData | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const estimateId = searchParams.get('id');
    if (!estimateId) {
      setError('No estimate ID provided');
      setIsLoading(false);
      return;
    }

    // Load estimate from localStorage
    const estimates = JSON.parse(localStorage.getItem('ds-arch-estimates') || '{}');
    const estimateData = estimates[estimateId];

    if (!estimateData) {
      setError('Estimate not found');
      setIsLoading(false);
      return;
    }

    setEstimate(estimateData);
    setIsLoading(false);
  }, [searchParams]);

  const downloadPDF = async () => {
    if (!estimate) return;

    try {
      const pdf = new jsPDF('p', 'mm', 'a4');

      // Header
      pdf.setFontSize(20);
      pdf.text('DS Arch Medical Facility Cost Estimate', 20, 30);

      pdf.setFontSize(12);
      pdf.text(`Project: ${estimate.projectName}`, 20, 50);
      pdf.text(`Client: ${estimate.clientName}`, 20, 60);
      pdf.text(`Facility Type: ${estimate.facilityType}`, 20, 70);
      pdf.text(`Location: ${estimate.location}`, 20, 80);
      pdf.text(`Date: ${new Date(estimate.createdAt).toLocaleDateString()}`, 20, 90);

      // Cost Breakdown
      let yPos = 110;
      pdf.setFontSize(14);
      pdf.text('Cost Breakdown:', 20, yPos);
      yPos += 10;

      pdf.setFontSize(10);
      pdf.text(`Equipment & Materials: $${estimate.costs.equipment.toLocaleString()}`, 20, yPos);
      yPos += 8;
      pdf.text(`Installation & Labor: $${estimate.costs.installation.toLocaleString()}`, 20, yPos);
      yPos += 8;
      pdf.text(`Medical Gas Systems: $${estimate.costs.medicalGas.toLocaleString()}`, 20, yPos);
      yPos += 8;
      pdf.text(`Compliance & Testing: $${estimate.costs.compliance.toLocaleString()}`, 20, yPos);
      yPos += 8;
      pdf.text(`Contingency: $${estimate.costs.contingency.toLocaleString()}`, 20, yPos);
      yPos += 15;

      pdf.setFontSize(14);
      pdf.text(`Total Project Cost: $${estimate.costs.total.toLocaleString()}`, 20, yPos);

      // Room Details
      if (estimate.rooms && estimate.rooms.length > 0) {
        yPos += 20;
        pdf.text('Room Configuration:', 20, yPos);
        yPos += 10;

        pdf.setFontSize(10);
        estimate.rooms.forEach((room, index) => {
          if (yPos > 250) {
            pdf.addPage();
            yPos = 30;
          }
          pdf.text(`${room.name} (${room.type}): ${room.area} sq ft`, 20, yPos);
          yPos += 6;
          const outlets = `O2: ${room.oxygenOutlets}, Air: ${room.airOutlets}, Vacuum: ${room.vacuumOutlets}, CO2: ${room.co2Outlets}, N2O: ${room.n2oOutlets}`;
          pdf.text(`  Medical Gas Outlets - ${outlets}`, 25, yPos);
          yPos += 8;
        });
      }

      // Footer
      pdf.setFontSize(8);
      pdf.text('Generated by DS Arch Medical Cost Estimator - dsarch.org', 20, 280);

      pdf.save(`${estimate.projectName || 'estimate'}-shared.pdf`);
    } catch (error) {
      console.error('PDF generation failed:', error);
      alert('PDF generation failed. Please try again.');
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading estimate...</p>
        </div>
      </div>
    );
  }

  if (error || !estimate) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <FileText className="h-16 w-16 text-gray-400 mx-auto mb-4" />
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Estimate Not Found</h1>
          <p className="text-gray-600 mb-6">{error || 'The requested estimate could not be found.'}</p>
          <Link
            href="/"
            className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center space-x-2"
          >
            <ArrowLeft className="h-5 w-5" />
            <span>Go to Home</span>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-3">
              <div className="bg-blue-600 text-white p-2 rounded-lg">
                <Building className="h-6 w-6" />
              </div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">DS Arch Medical Cost Estimator</h1>
                <p className="text-sm text-gray-600">Professional Cost Estimate</p>
              </div>
            </div>

            <div className="flex items-center space-x-4">
              <button
                onClick={downloadPDF}
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2"
              >
                <Download className="h-4 w-4" />
                <span>Download PDF</span>
              </button>
              <Link
                href="/"
                className="text-gray-600 hover:text-gray-900 flex items-center space-x-2"
              >
                <span>Create New Estimate</span>
              </Link>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Project Header */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-8 mb-8">
          <div className="flex justify-between items-start mb-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">{estimate.projectName}</h1>
              <div className="flex items-center space-x-6 text-gray-600">
                <div className="flex items-center space-x-2">
                  <Building className="h-4 w-4" />
                  <span>{estimate.facilityType}</span>
                </div>
                <div className="flex items-center space-x-2">
                  <MapPin className="h-4 w-4" />
                  <span>{estimate.location}</span>
                </div>
                <div className="flex items-center space-x-2">
                  <Calendar className="h-4 w-4" />
                  <span>{new Date(estimate.createdAt).toLocaleDateString()}</span>
                </div>
              </div>
            </div>

            <div className="text-right">
              <div className="text-3xl font-bold text-blue-600">${estimate.costs.total.toLocaleString()}</div>
              <div className="text-sm text-gray-600">Total Project Cost</div>
            </div>
          </div>

          <div className="grid md:grid-cols-4 gap-6 pt-6 border-t border-gray-200">
            <div className="text-center">
              <div className="text-2xl font-bold text-gray-900">{estimate.rooms?.length || 0}</div>
              <div className="text-sm text-gray-600">Rooms Configured</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-gray-900">{estimate.equipment?.length || 0}</div>
              <div className="text-sm text-gray-600">Equipment Items</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-gray-900">
                {estimate.rooms?.reduce((sum, room) =>
                  sum + room.oxygenOutlets + room.airOutlets + room.vacuumOutlets + room.co2Outlets + room.n2oOutlets, 0
                ) || 0}
              </div>
              <div className="text-sm text-gray-600">Gas Outlets</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-gray-900">
                {estimate.projectData?.squareFootage?.toLocaleString() || 'N/A'}
              </div>
              <div className="text-sm text-gray-600">Square Feet</div>
            </div>
          </div>
        </div>

        {/* Cost Breakdown */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-8 mb-8">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">Cost Breakdown</h2>

          <div className="space-y-4">
            <div className="flex justify-between items-center py-4 border-b border-gray-200">
              <div>
                <div className="font-medium text-gray-900">Equipment & Materials</div>
                <div className="text-sm text-gray-600">Medical equipment and materials</div>
              </div>
              <div className="text-xl font-semibold text-gray-900">${estimate.costs.equipment.toLocaleString()}</div>
            </div>

            <div className="flex justify-between items-center py-4 border-b border-gray-200">
              <div>
                <div className="font-medium text-gray-900">Installation & Labor</div>
                <div className="text-sm text-gray-600">Professional installation services</div>
              </div>
              <div className="text-xl font-semibold text-gray-900">${estimate.costs.installation.toLocaleString()}</div>
            </div>

            <div className="flex justify-between items-center py-4 border-b border-gray-200">
              <div>
                <div className="font-medium text-gray-900">Medical Gas Systems</div>
                <div className="text-sm text-gray-600">Gas outlets and distribution systems</div>
              </div>
              <div className="text-xl font-semibold text-gray-900">${estimate.costs.medicalGas.toLocaleString()}</div>
            </div>

            <div className="flex justify-between items-center py-4 border-b border-gray-200">
              <div>
                <div className="font-medium text-gray-900">Compliance & Testing</div>
                <div className="text-sm text-gray-600">NFPA 99 and regulatory compliance</div>
              </div>
              <div className="text-xl font-semibold text-gray-900">${estimate.costs.compliance.toLocaleString()}</div>
            </div>

            <div className="flex justify-between items-center py-4 border-b border-gray-200">
              <div>
                <div className="font-medium text-gray-900">Contingency</div>
                <div className="text-sm text-gray-600">10% project contingency</div>
              </div>
              <div className="text-xl font-semibold text-gray-900">${estimate.costs.contingency.toLocaleString()}</div>
            </div>

            <div className="flex justify-between items-center py-6 bg-blue-50 rounded-lg px-6">
              <div>
                <div className="text-xl font-bold text-gray-900">Total Project Cost</div>
                <div className="text-sm text-gray-600">All costs included</div>
              </div>
              <div className="text-3xl font-bold text-blue-600">${estimate.costs.total.toLocaleString()}</div>
            </div>
          </div>
        </div>

        {/* Room Configuration */}
        {estimate.rooms && estimate.rooms.length > 0 && (
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-8 mb-8">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">Room Configuration</h2>

            <div className="grid gap-4">
              {estimate.rooms.map((room, index) => (
                <div key={index} className="border border-gray-200 rounded-lg p-4">
                  <div className="flex justify-between items-start mb-3">
                    <div>
                      <h3 className="font-semibold text-gray-900">{room.name}</h3>
                      <p className="text-sm text-gray-600">{room.type} • {room.area} sq ft</p>
                    </div>
                  </div>

                  <div className="grid grid-cols-5 gap-4 text-center">
                    <div>
                      <div className="text-sm font-medium text-gray-900">{room.oxygenOutlets}</div>
                      <div className="text-xs text-gray-600">Oxygen</div>
                    </div>
                    <div>
                      <div className="text-sm font-medium text-gray-900">{room.airOutlets}</div>
                      <div className="text-xs text-gray-600">Air</div>
                    </div>
                    <div>
                      <div className="text-sm font-medium text-gray-900">{room.vacuumOutlets}</div>
                      <div className="text-xs text-gray-600">Vacuum</div>
                    </div>
                    <div>
                      <div className="text-sm font-medium text-gray-900">{room.co2Outlets}</div>
                      <div className="text-xs text-gray-600">CO2</div>
                    </div>
                    <div>
                      <div className="text-sm font-medium text-gray-900">{room.n2oOutlets}</div>
                      <div className="text-xs text-gray-600">N2O</div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Equipment List */}
        {estimate.equipment && estimate.equipment.length > 0 && (
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-8">
            <h2 className="text-2xl font-bold text-gray-900 mb-6">Equipment & Materials</h2>

            <div className="overflow-x-auto">
              <table className="w-full">
                <thead>
                  <tr className="border-b border-gray-200">
                    <th className="text-left py-3 text-sm font-medium text-gray-700">Equipment</th>
                    <th className="text-left py-3 text-sm font-medium text-gray-700">Category</th>
                    <th className="text-center py-3 text-sm font-medium text-gray-700">Qty</th>
                    <th className="text-right py-3 text-sm font-medium text-gray-700">Unit Cost</th>
                    <th className="text-right py-3 text-sm font-medium text-gray-700">Total</th>
                  </tr>
                </thead>
                <tbody>
                  {estimate.equipment.map((item, index) => (
                    <tr key={index} className="border-b border-gray-100">
                      <td className="py-3 font-medium text-gray-900">{item.name}</td>
                      <td className="py-3 text-gray-600">{item.category}</td>
                      <td className="py-3 text-center text-gray-900">{item.quantity}</td>
                      <td className="py-3 text-right text-gray-900">${item.unitCost.toLocaleString()}</td>
                      <td className="py-3 text-right font-medium text-gray-900">
                        ${(item.quantity * item.unitCost).toLocaleString()}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        )}

        {/* Footer */}
        <div className="text-center mt-12 pt-8 border-t border-gray-200">
          <p className="text-gray-600 mb-4">
            This estimate was generated by DS Arch Medical Cost Estimator
          </p>
          <Link
            href="/"
            className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center space-x-2"
          >
            <Building className="h-5 w-5" />
            <span>Create Your Own Estimate</span>
          </Link>
        </div>
      </div>
    </div>
  );
}

export default function EstimateViewPage() {
  return (
    <Suspense fallback={
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading estimate...</p>
        </div>
      </div>
    }>
      <EstimateViewerContent />
    </Suspense>
  );
}
